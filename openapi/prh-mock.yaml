openapi: 3.0.1
info:
  title: PRH mock API
  version: '1.0'
  description: API definition for PRH mock API
  contact:
    name: Lassi Patanen
    email: lassi.patanen@gofore.com
servers:
  - url: 'http://localhost:3000'
tags:
  - name: productizer
  - name: prh-api
paths:
  /NonListedCompany/Establishment:
    post:
      summary: ''
      operationId: post-NonListedCompany-Establishment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstablishmentResponse'
      description: Get non listed company establishment details
      tags:
        - productizer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstablishmentRequest'
  /NonListedCompany/Establishment/Write:
    post:
      summary: ''
      operationId: post-NonListedCompany-Establishment-Write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstablishmentResponse'
      description: Write non listed company establishment details
      tags:
        - productizer
  /NonListedCompany/BeneficialOwners:
    parameters: []
    post:
      summary: ''
      operationId: post-NonListedCompany-BeneficialOwners
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeneficialOwnersResponse'
      tags:
        - productizer
      description: Get company beneficial owners details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficialOwnersRequest'
  /NonListedCompany/BeneficialOwners/Write:
    post:
      summary: ''
      operationId: post-NonListedCompany-BeneficialOwners-Write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeneficialOwnersResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficialOwnersWriteRequest'
      tags:
        - productizer
      description: Endpoint for writing beneficial owner data
  /NonListedCompany/SignatoryRights:
    parameters: []
    post:
      summary: ''
      operationId: post-NonListedCompany-SignatoryRights
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatoryRightsResponse'
      tags:
        - productizer
      description: Get company signatory rights details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatoryRightsRequest'
  /NonListedCompany/SignatoryRights/Write:
    post:
      summary: ''
      operationId: post-NonListedCompany-SignatoryRights-Write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatoryRightsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatoryRightsWriteRequest'
            examples:
              Example 1:
                value:
                  nationalIdentifier: string
                  signatoryRights:
                    signingRights:
                      personalId: string
                      givenName: string
                      middleNames: string
                      lastName: string
                      dateOfBirth: '2019-08-24T14:15:22Z'
                      nationality: str
                      fullAddress: string
                      thoroughfare: string
                      locatorDesignator: string
                      locatorName: string
                      addressArea: string
                      postCode: string
                      postName: string
                      poBox: string
                      adminUnitLevel1: str
                      adminUnitLevel2: string
      tags:
        - productizer
      description: Endpoint for writing signatory rights data
  /draft/NSG/Agent/BasicInformation:
    post:
      summary: Agent Basic Information
      description: Agent Basic Information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicInformationRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicInformationResponse'
  /companies:
    get:
      summary: Your GET endpoint
      tags:
        - prh-api
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCompaniesResponse'
      operationId: get-companies
      description: List companies
  '/companies/{nationalIdentifier}':
    parameters:
      - schema:
          type: string
        name: nationalIdentifier
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - prh-api
      responses:
        '200':
          description: OK
      operationId: get-companies-nationalIdentifier
      description: Get company establishment details
  '/users/{userId}/companies':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: User identifier in Guid format
    get:
      summary: Your GET endpoint
      tags:
        - prh-api
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserCompaniesResponse'
      operationId: get-users-userId-companies
      description: List companies founded by user
    post:
      summary: ''
      operationId: post-users-userId-companies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: 2521971-1
      description: Create new company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstablishmentResponse'
        description: Request body for creating new company
      tags:
        - prh-api
  '/users/{userId}/companies/{nationalIdentifier}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: User identifier in Guid format
      - schema:
          type: string
        name: nationalIdentifier
        in: path
        required: true
    patch:
      summary: ''
      operationId: patch-users-userId-companies-nationalIdentifier
      responses:
        '200':
          description: OK
      description: Update company details
      tags:
        - prh-api
    delete:
      summary: ''
      operationId: delete-users-userId-companies-nationalIdentifier
      responses:
        '200':
          description: OK
      description: Delete company
      tags:
        - prh-api
components:
  schemas:
    Auditor:
      type: object
      x-examples: {}
      properties:
        companyName:
          type: string
          maxLength: 250
        nationalIdentifier:
          type: string
          maxLength: 40
        givenName:
          type: string
          maxLength: 250
        lastName:
          type: string
          maxLength: 250
    BoardMember:
      type: object
      x-examples: {}
      properties:
        role:
          type: string
        givenName:
          type: string
          maxLength: 250
        middleNames:
          type: string
          maxLength: 250
        lastName:
          type: string
          maxLength: 250
        dateOfBirth:
          type: string
        nationality:
          type: string
          minLength: 3
          maxLength: 3
      required:
        - role
        - givenName
        - middleNames
        - lastName
        - dateOfBirth
        - nationality
    CompanyAddress:
      type: object
      x-examples: {}
      properties:
        fullAddress:
          type: string
          maxLength: 250
        thoroughfare:
          type: string
          maxLength: 40
        locatorDesignator:
          type: string
          maxLength: 10
        locatorName:
          type: string
          maxLength: 40
        addressArea:
          type: string
          maxLength: 40
        postCode:
          type: string
          maxLength: 10
        postName:
          type: string
          maxLength: 40
        poBox:
          type: string
          maxLength: 10
        adminUnitLevel_1:
          type: string
          minLength: 3
          maxLength: 3
        adminUnitLevel_2:
          type: string
          maxLength: 40
    CompanyDetails:
      type: object
      x-examples: {}
      properties:
        name:
          type: string
          maxLength: 250
        alternativeName:
          type: string
          maxLength: 250
        foundingDate:
          type: string
        industrySector:
          type: string
        shareCapital:
          type: number
        capitalCurrency:
          type: string
        settlementDeposit:
          type: number
        depositCurrency:
          type: string
        settlementDate:
          type: string
          nullable: true
        countryOfResidence:
          type: string
          maxLength: 3
          minLength: 3
      required:
        - name
        - foundingDate
        - industrySector
        - shareCapital
        - capitalCurrency
    ManagingDirector:
      type: object
      x-examples: {}
      properties:
        role:
          type: string
        givenName:
          type: string
          maxLength: 250
        middleNames:
          type: string
          maxLength: 250
        lastName:
          type: string
          maxLength: 250
        dateOfBirth:
          type: string
        nationality:
          type: string
          minLength: 3
          maxLength: 3
      required:
        - role
        - givenName
        - middleNames
        - lastName
        - dateOfBirth
        - nationality
    Ownership:
      title: Ownership
      x-stoplight:
        id: d8squwfh404og
      type: object
      properties:
        shareSeriesClass:
          type: string
        quantity:
          type: integer
      required:
        - shareSeriesClass
        - quantity
    Registrant:
      type: object
      x-examples: {}
      properties:
        givenName:
          type: string
          maxLength: 250
        lastName:
          type: string
          maxLength: 250
        email:
          type: string
          format: email
        phoneNumber:
          type: string
      required:
        - givenName
        - lastName
        - email
        - phoneNumber
    ShareSeries:
      type: object
      x-examples: {}
      x-stoplight:
        id: 0233acac0402c
      properties:
        shareSeriesClass:
          type: string
        numberOfShares:
          type: integer
        shareValue:
          type: number
        shareValueCurrency:
          type: string
      required:
        - shareSeriesClass
        - numberOfShares
        - shareValue
    Shareholder:
      title: Shareholder
      x-stoplight:
        id: 3kph8jvzi3tnc
      type: object
      properties:
        name:
          type: string
          maxLength: 250
        shareOwnership:
          type: array
          items:
            $ref: '#/components/schemas/Ownership'
      required:
        - name
    SigningRights:
      title: SigningRights
      x-stoplight:
        id: u9059b3v2wctw
      type: object
      properties:
        role:
          type: string
        personalId:
          type: string
          maxLength: 40
        givenName:
          type: string
          maxLength: 250
        middleNames:
          type: string
          maxLength: 250
        lastName:
          type: string
          maxLength: 250
        dateOfBirth:
          type: string
        nationality:
          type: string
          minLength: 3
          maxLength: 3
        fullAddress:
          type: string
          maxLength: 250
        thoroughfare:
          type: string
          maxLength: 40
        locatorDesignator:
          type: string
          maxLength: 10
        locatorName:
          type: string
          maxLength: 40
        addressArea:
          type: string
          maxLength: 40
        postCode:
          type: string
          maxLength: 10
        postName:
          type: string
          maxLength: 40
        poBox:
          type: string
          maxLength: 10
        adminUnitLevel_1:
          type: string
          minLength: 3
          maxLength: 3
        adminUnitLevel_2:
          type: string
          maxLength: 40
      required:
        - givenName
        - middleNames
        - lastName
        - dateOfBirth
        - nationality
    EstablishmentResponse:
      title: NonListedCompanyEstablishmentResponse
      x-stoplight:
        id: dc9b55fadcd90
      type: object
      properties:
        registrant:
          $ref: '#/components/schemas/Registrant'
        companyDetails:
          $ref: '#/components/schemas/CompanyDetails'
        shareSeries:
          type: array
          items:
            $ref: '#/components/schemas/ShareSeries'
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        managingDirectors:
          type: array
          items:
            $ref: '#/components/schemas/ManagingDirector'
        boardMembers:
          type: array
          items:
            $ref: '#/components/schemas/BoardMember'
        auditorDetails:
          $ref: '#/components/schemas/Auditor'
      required:
        - registrant
        - companyDetails
        - shareSeries
        - companyAddress
        - managingDirectors
        - boardMembers
        - auditorDetails
    BeneficialOwnerShareSeries:
      title: BeneficialOwnerShareSeries
      x-stoplight:
        id: 55obmds34oygp
      type: object
      properties:
        shareSeriesClass:
          type: string
        numberOfShares:
          type: integer
        votesPerShare:
          type: integer
      required:
        - shareSeriesClass
        - numberOfShares
        - votesPerShare
    SignatoryRightsResponse:
      title: SignatoryRightsResponse
      x-stoplight:
        id: 2mzvgigao2mou
      type: object
      properties:
        signatoryRights:
          type: array
          items:
            $ref: '#/components/schemas/SigningRights'
      required:
        - signatoryRights
    SignatoryRightsWriteRequest:
      title: SignatoryRightsWriteRequest
      x-stoplight:
        id: fy54mgc8miwbm
      type: object
      properties:
        nationalIdentifier:
          type: string
        data:
          $ref: '#/components/schemas/SignatoryRightsResponse'
    BeneficialOwnersResponse:
      title: BeneficialOwnersResponse
      x-stoplight:
        id: 05m3bny6dbiuc
      type: object
      description: Beneficial Owners response model
      properties:
        shareSeries:
          type: array
          items:
            $ref: '#/components/schemas/BeneficialOwnerShareSeries'
        shareholders:
          type: array
          items:
            $ref: '#/components/schemas/Shareholder'
    BeneficialOwnersWriteRequest:
      title: BeneficialOwnersWriteRequest
      x-stoplight:
        id: se5qn1v79fs6v
      type: object
      properties:
        nationalIdentifier:
          type: string
        data:
          $ref: '#/components/schemas/BeneficialOwnersResponse'
    ListCompaniesResponse:
      title: ListCompaniesResponse
      x-stoplight:
        id: 4miwrnaela2dk
      type: array
      items:
        $ref: '#/components/schemas/MinimalCompanyDetails'
    MinimalCompanyDetails:
      title: MinimalCompanyDetails
      x-stoplight:
        id: 1280a7kxfvy2c
      type: object
      properties:
        nationalIdentifier:
          type: string
        key:
          type: string
    ListUserCompaniesResponse:
      title: ListUserCompaniesResponse
      x-stoplight:
        id: m65geh3zxs56m
      type: array
      items:
        $ref: '#/components/schemas/UserCompany'
    UserCompany:
      title: UserCompany
      x-stoplight:
        id: ygvn0zlu2b2ee
      type: object
      properties:
        nationalIdentifier:
          type: string
        data:
          $ref: '#/components/schemas/EstablishmentResponse'
    EstablishmentRequest:
      title: EstablishmentRequest
      x-stoplight:
        id: tveojix46fexp
      type: object
      properties:
        nationalIdentifier:
          type: string
    SignatoryRightsRequest:
      title: SignatoryRightsRequest
      x-stoplight:
        id: frbvf1r0ik0b1
      type: object
      properties:
        nationalIdentifier:
          type: string
    BeneficialOwnersRequest:
      title: BeneficialOwnersRequest
      x-stoplight:
        id: 8m410gif68mdq
      type: object
      properties:
        nationalIdentifier:
          type: string
    BasicInformationRequest:
      title: BasicInformationRequest
      required:
        - nationalIdentifier
      type: object
      properties:
        nationalIdentifier:
          title: National Identifier
          type: string
          description: National identifier for a legal entity
          example: 2464491-9
    BasicInformationResponse:
      title: BasicInformationResponse
      required:
        - name
        - legalForm
        - legalStatus
        - registrationDate
        - registeredAddress
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The name of the legal entity
          example: Oy Example Ab
        legalForm:
          title: Legal form
          allOf:
            - $ref: '#/components/schemas/NordicLegalForm'
          description: The [Nordic Legal Form code](https://koodistot.suomi.fi/codescheme;registryCode=verotus;schemeCode=LegalForm2) for the company.
          example: FI_OY
        legalStatus:
          title: Legal status
          allOf:
            - $ref: '#/components/schemas/LegalStatus'
          description: Status of the legal entity
          example: NORMAL
        registrationDate:
          title: Registration date
          type: string
          description: Official registration date of the legal entity in the national trade registry
          format: date
        registeredAddress:
          $ref: '#/components/schemas/RegisteredAddress'
    NordicLegalForm:
      title: NordicLegalForm       
      type: string
      description: An enumeration.
    LegalStatus:
      title: LegalStatus
      enum:
        - NORMAL
        - LIQUIDATION
        - RESTRUCTURING
        - BANKRUPTCY
      type: string
      description: An enumeration.
    RegisteredAddress:
      title: RegisteredAddress
      required:
        - adminUnitLevel_1
      type: object
      properties:
        fullAddress:
          title: Full address
          maxLength: 250
          minLength: 1
          type: string
          description: The complete address written as a string. Use of this property is recommended as it will not suffer any misunderstandings that might arise through the breaking up of an address into its component parts.
          example: Tietotie 4 A 7, 00100 Helsinki, Finland
        thoroughfare:
          title: Thoroughfare
          maxLength: 40
          minLength: 1
          type: string
          description: The name of a passage or way through from one location to another. A thoroughfare is usually a street, but it might be a waterway or some other feature.
          example: Avenue des Champs-Élysées
        locatorDesignator:
          title: Locator designator
          maxLength: 10
          minLength: 1
          type: string
          description: A number or sequence of characters that uniquely identifies the locator within the relevant scope. In simpler terms, this is the building number, apartment number, etc.
          example: Flat 3, 17 or 3 A 4
        locatorName:
          title: Locator name
          maxLength: 40
          minLength: 1
          type: string
          description: Proper noun(s) applied to the real world entity identified by the locator. The locator name could be the name of the property or complex, of the building or part of the building, or it could be the name of a room inside a building. The key difference between a locator and a locator name is that the latter is a proper name and is unlikely to include digits.
          example: Shumann, Berlaymont (meeting room name)
        addressArea:
          title: Address area
          maxLength: 40
          minLength: 1
          type: string
          description: The name of a geographic area that groups Addresses. This would typically be part of a city, a neighbourhood or village. Address area is not an administrative unit.
          example: Montmartre (in Paris)
        postCode:
          title: Post code
          maxLength: 10
          minLength: 1
          type: string
          description: The code created and maintained for postal purposes to identify a subdivision of addresses and postal delivery points.
          example: '75000'
        postName:
          title: Post name
          maxLength: 40
          minLength: 1
          type: string
          description: A name created and maintained for postal purposes to identify a subdivision of addresses and postal delivery points. Usually a city.
          example: Paris
        poBox:
          title: PO box
          maxLength: 10
          minLength: 1
          type: string
          description: A location designator for a postal delivery point at a post office, usually a number.
          example: '9383'          
        adminUnitLevel_1:
          title: Admin unit level 1
          type: string
          minLength: 2
          maxLength: 2
          description: The name of the uppermost level of the address, almost always a country. ISO 3166 two character (Alpha 2) format
          example: USA
        adminUnitLevel_2:
          title: Admin unit level 2
          maxLength: 40
          minLength: 1
          type: string
          description: The name of a secondary level/region of the address, usually a county, state or other such area that typically encompasses several localities. Values could be a region or province, more granular than level 1.
          example: Uusimaa
        addressId:
          title: Address id
          maxLength: 40
          minLength: 1
          type: string
          description: A globally unique identifier for each instance of an Address. The concept of adding a globally unique identifier for each instance of an address is a crucial part of the INSPIRE data spec. A number of EU countries have already implemented an ID (a UUID) in their Address Register, among them Denmark.
          example: 123e4567-e89b-12d3-a456-42661417400